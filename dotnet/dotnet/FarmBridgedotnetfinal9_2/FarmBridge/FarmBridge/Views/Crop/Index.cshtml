@model IEnumerable<Crops>
@{
    ViewData["Title"] = "Farmer Dashboard";
}
<div class="main-container" style="background-image: url(''); background-size: cover; background-repeat: no-repeat;">
    <div class="container py-5">
        @* <h1 class="text-center ">Farmer Dashboard</h1> *@
        <nav>
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#myCrops">My Crops</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#myOrders">My Orders</a>
                </li>
            </ul>
        </nav>
        <div class="tab-content mt-3" style="min-height: 60vh;">
            <div id="myCrops" class="tab-pane fade show active">
                <h2 class="text-center">My Crops</h2>
                <p>
                    <a asp-action="Create" class="btn btn-primary">Add New</a>
                </p>
                <table class="table table-striped table-light">
                    <thead class="thead-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Name)</th>
                            <th>@Html.DisplayNameFor(model => model.Season)</th>
                            <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                            <th>@Html.DisplayNameFor(model => model.Status)</th>
                            <th>@Html.DisplayNameFor(model => model.Price)</th>
                            <th>Image</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                <td>@Html.DisplayFor(modelItem => item.Season)</td>
                                <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                                <td>
                                    @if (item.Image != null)
                                    {
                                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(item.Image)"
                                             alt="Crop Image" style="max-width: 100px;" />
                                    }
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.CropID" class="btn btn-warning">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@item.CropID" class="btn btn-danger">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div id="myOrders" class="tab-pane fade">
                <h2 class="text-center">My Orders</h2>
                <p>No orders to display.</p>
            </div>
        </div>
    </div>
</div>

@* @await Html.PartialAsync("_Footer") *@
<style>
    html, body {
        height: 100%;
        margin: 0;
        overflow-x: hidden;
    }

    .main-container {
        min-height: 100%;
        display: flex;
        flex-direction: column;
        padding-bottom: 50px;
    }

    .container {
        flex-grow: 1;
        padding-bottom: 30px;
    }

    footer {
        position: relative;
        bottom: 0;
        width: 100%;
        margin-top: auto;
    }

    .footer {
        margin-top: 20px;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
@model FarmBridge.Dtos.BuyerLoginDto

@{
    ViewData["Title"] = "Login";
}

<div class="container mt-5">
    <div class="text-center">
        <h1 class="mb-4">@ViewData["Title"]</h1>
        <hr class="w-50 mx-auto" />
    </div>

    <div class="row justify-content-center">
        <div class="col-md-6">
            <form asp-action="Login" id="loginForm" class="card shadow p-4">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="mb-3">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Password" class="form-label"></label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="d-grid">
                    <input type="submit" value="Login" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div class="text-center mt-4">
        <p>Don't have an account? <a asp-action="Register" class="text-primary">Register here</a>.</p>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    @* <script> *@
    @*     document.getElementById('loginForm').addEventListener('submit', async function (event) { *@
    @*         event.preventDefault(); *@
    @*         const form = event.target; *@
    @*         const formData = new FormData(form); *@
    @*         try { *@
    @*             const response = await fetch(form.action, { *@
    @*                 method: 'POST', *@
    @*                 body: formData, *@
    @*                 headers: { *@
    @*                     'Accept': 'application/json' *@
    @*                 } *@
    @*             }); *@
    @*             if (response.ok) { *@
    @*                 const data = await response.json(); *@
    @*                 localStorage.setItem('jwtToken', data.token); *@
    @*                 window.location.href = '/Buyer/GetAll'; *@
    @*             } else { *@
    @*                 const error = await response.json(); *@
    @*                 alert('Login failed: ' + error.message); *@
    @*             } *@
    @*         } catch (err) { *@
    @*             alert('An unexpected error occurred: ' + err.message); *@
    @*         } *@
    @*     }); *@
    @* </script> *@
}
@* @await Html.PartialAsync("_Footer") *@